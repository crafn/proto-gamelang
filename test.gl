let g_value : int = 8;

let fibo := fn (n : int) -> int
{
	if (n == 0) {
		return 0;
	}
	if (n == 1) {
		return 1;
	}
	return fibo(n - 1) + fibo(n - 2);
};

let Chicken := struct {
	var age : int         = 0;
	var mass : int        = fibo(g_value);
	var parent : ?Chicken = null;
};

let Empty := struct {};

let gotoExample := fn () -> int
{
	var i : int = 0;
	test_label:
		i = i + 1;	
		if (i != 99) {
			goto test_label;
		}
	return i;
};

let foo := fn (a : int, b : int, c : int) -> void {};
let bar := fn (a : int, b : int = 10) -> void {};

let main := fn () -> int
{
	// Named argument test
	foo(.c= 17, .a= 1, 8);

	// Default argument test
	bar(1);

	// Uninitialized instance
	var e : Empty;


	var old_chicken := Chicken(.mass= 10, .age= 5);

	var chicken := Chicken(.parent = &old_chicken);
	chicken.mass = 10;

	return 0;
};

